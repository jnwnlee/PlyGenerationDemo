{"version":3,"sources":["components/SearchForm.js","hook/UserInput.js","App.js","index.js"],"names":["SearchForm","initialValue","useState","value","setValue","reset","bind","onChange","event","target","UserInput","query","bindSearch","resetSearch","onSubmit","preventDefault","alert","type","placeholder","App","className","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"6OAEaA,EAAa,WACtB,MCDqB,SAAAC,GACrB,MAA0BC,mBAASD,GAAnC,mBAAOE,EAAP,KAAcC,EAAd,KAEA,MAAO,CACLD,QACAC,WACAC,MAAO,kBAAMD,EAAS,KACtBE,KAAM,CACJH,QACAI,SAAU,SAAAC,GACRJ,EAASI,EAAMC,OAAON,UDTkCO,CAAU,IAAzDC,EAAf,EAAQR,MAAoBS,EAA5B,EAAsBN,KAAyBO,EAA/C,EAAwCR,MAOxC,OACI,uBAAMS,SANW,SAACN,GAClBA,EAAMO,iBACNC,MAAM,qBAAD,OAAsBL,IAC3BE,KAGA,UACI,mCAAOI,KAAK,OAAOC,YAAY,iBAAoBN,IACnD,uBAAOK,KAAK,SAASd,MAAM,eEGxBgB,G,MAXH,WACV,OACE,sBAAKC,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,SACE,6DAEF,cAAC,EAAD,SCNAC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFL,K","file":"static/js/main.27551722.chunk.js","sourcesContent":["import { UserInput } from \"../hook/UserInput\";\r\n\r\nexport const SearchForm = () => {\r\n    const { value: query, bind: bindSearch, reset: resetSearch} = UserInput('');\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        alert(`Submitting Query: ${query}`);\r\n        resetSearch();\r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input type=\"text\" placeholder=\"Search Tracks\" {...bindSearch}/>\r\n            <input type=\"submit\" value=\"Search\"/>\r\n        </form>\r\n    );\r\n}","import { useState } from \"react\";\r\n\r\nexport const UserInput = initialValue => {\r\n    const [value, setValue] = useState(initialValue);\r\n  \r\n    return {\r\n      value,\r\n      setValue,\r\n      reset: () => setValue(\"\"),\r\n      bind: {\r\n        value,\r\n        onChange: event => {\r\n          setValue(event.target.value);\r\n        }\r\n      }\r\n    };\r\n  };\r\n\r\n/*export const UserInput = (initialValue, validator) => {\r\n    const [value, setValue] = useState(initialValue);\r\n    const onChange = (event) => {\r\n      const {\r\n        target: { value }\r\n      } = event;\r\n      let willUpdate = true;\r\n      if (typeof validator == \"function\") {\r\n        willUpdate = validator(value);\r\n      }\r\n      if (willUpdate) {\r\n        setValue(value);\r\n      }\r\n      console.log(\"Search Token: \",value);\r\n    };\r\n    return { value, onChange };\r\n  };*/","import React from \"react\";\nimport { SearchForm } from \"./components/SearchForm\";\n\nimport './App.css';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Playlist Title Generation</h1>\n      </header>\n      <SearchForm/>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n\n"],"sourceRoot":""}